// This is your Prisma schema file for production (PostgreSQL),
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("User")
}

model Category {
  id          String   @id @default(cuid())
  name        Json
  slug        String   @unique
  description Json?
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  products    Product[]

  @@map("Category")
}

model Product {
  id          String   @id @default(cuid())
  name        Json
  description Json?
  price       Decimal  @db.Decimal(10, 2)
  sku         String   @unique
  images      String[]
  categoryId  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("Product")
}

model Order {
  id                    String      @id @default(cuid())
  orderNumber           String      @unique
  total                 Decimal     @db.Decimal(10, 2)
  currency              String      @default("ILS")
  status                String      @default("pending")
  paymentStatus         String      @default("pending")
  customerName          String
  customerEmail         String
  customerPhone         String?
  deliveryAddress       String?
  notes                 String?
  cardcomLowProfileId   String?
  cardcomTransactionId  String?
  paymentData           String?
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  items                 OrderItem[]
  payments              Payment[]

  @@map("Order")
}

model OrderItem {
  id          String   @id @default(cuid())
  orderId     String
  productName String
  productSku  String
  quantity    Int
  price       Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  order       Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("OrderItem")
}

model Payment {
  id                   String   @id @default(cuid())
  orderId              String
  amount               Decimal  @db.Decimal(10, 2)
  currency             String   @default("ILS")
  status               String   @default("pending")
  paymentMethod        String   @default("cardcom")
  cardcomLowProfileId  String?
  cardcomTransactionId String?
  cardcomResponseCode  Int?
  last4Digits          String?
  cardBrand            String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  order                Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("Payment")
}

model PaymentToken {
  id            String   @id @default(cuid())
  token         String   @unique
  last4Digits   String?
  cardExpiry    String?
  cardBrand     String?
  customerEmail String?
  customerName  String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("PaymentToken")
}
